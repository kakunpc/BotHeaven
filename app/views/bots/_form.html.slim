= form_for @bot do |f|
  - if @bot.errors.any?
    #error_explanation
      h2 = "#{pluralize(@bot.errors.count, "error")} prohibited this bot from being saved:"
      ul
        - @bot.errors.full_messages.each do |message|
          li = message

  .field
    = f.label :name
    = f.text_field :name
  .field
    = f.label :channel
    = f.text_field :channel
  .field
    = f.label :default_icon
    = f.text_field :default_icon
  .field
    = f.label :permission
    = f.select :permission, Bots::Permissions.form_items, selected: @bot.permission.to_s
  .field
    - using_modules = @bot.bot_modules.usable(@bot)
    - using_module_ids= using_modules.pluck(:id)
    - usable_modules = BotModule.usable(@bot).where.not(id: using_module_ids)

    = f.label BotModule.model_name.human
    .modules
      .row.selector
        .js-selected-values
          - using_module_ids.each do |module_id|
            = hidden_field_tag 'bot[modules][]', module_id
        .col-sm-5.using-modules
          = t('.using_module')
          select.form-control.js-using-module multiple=true name="selected_modules"
            - using_modules.each do |bot_module|
              option value=bot_module.id
                = bot_module.name
        .col-sm-2.actions
          a.btn.btn-success.js-add-module
            .glyphicon.glyphicon-chevron-left
            = t('.add')
          a.btn.btn-danger.js-remove-module
            = t('.remove')
            .glyphicon.glyphicon-chevron-right
        .col-sm-5.usable-modules
          = t('.usable_module')
          select.form-control.js-usable-module multiple=true name="usable_modules"
            - usable_modules.each do |bot_module|
              option value=bot_module.id
                = bot_module.name
  .field
    = f.label :script
    .editor.js-editor
      = f.text_area :script, class: 'js-textarea'
      .toolbar.js-toolbar
        .toolbar-item.pull-right.js-switcher
          .glyphicon.glyphicon-resize-full
  .actions
    = f.submit class: 'btn btn-primary'

coffee:
  $ ->
    new BotHeaven.Commons.Editor(true)
    new BotHeaven.Bots.ModuleSelector()
